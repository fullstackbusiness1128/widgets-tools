name: Script tests

on:
    push:
        branches: [master, /^pluggable-widgets-tools-v*/, /^generator-widget-v*/]
    pull_request:
        branches: [master]

jobs:
    # TODO: Convert linux/unix commands to windows
    #  windows_node10:
    #    name: "Script tests (Node 10, windows)"
    #    runs-on: windows-latest
    #
    #    steps:
    #      - id: files
    #        uses: jitterbit/get-changed-files@v1
    #      - uses: actions/checkout@v2
    #        with:
    #          submodules: false
    #      - uses: actions/setup-node@v1
    #        with:
    #          node-version: '10.x'
    #      - run: export CHANGED_GLOBAL_FILES=$(echo "${{ steps.files.outputs.all }}" | grep -v "^packages")
    #      - run: export PARTIAL_BUILD=$(if [ "$CHANGED_GLOBAL_FILES" = "" ] && [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "true"; else echo "false"; fi)
    #      - run: export SINCE_ARG=$(if [ "$PARTIAL_BUILD" = "true" ]; then echo "--since $GITHUB_SHA"; else echo ""; fi)
    #      - run: set -e
    #      - run: npm install
    #      - run: npm run test:scripts -- $SINCE_ARG
    #  windows_latest:
    #    name: "Script tests (Node latest, windows)"
    #    runs-on: windows-latest
    #
    #    steps:
    #      - id: files
    #        uses: jitterbit/get-changed-files@v1
    #      - uses: actions/checkout@v2
    #        with:
    #          submodules: false
    #      - run: export CHANGED_GLOBAL_FILES=$(echo "${{ steps.files.outputs.all }}" | grep -v "^packages")
    #      - run: export PARTIAL_BUILD=$(if [ "$CHANGED_GLOBAL_FILES" = "" ] && [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "true"; else echo "false"; fi)
    #      - run: export SINCE_ARG=$(if [ "$PARTIAL_BUILD" = "true" ]; then echo "--since $GITHUB_SHA"; else echo ""; fi)
    #      - run: set -e
    #      - run: npm install
    #      - run: npm run test:scripts -- $SINCE_ARG
    test:
        name: "Script tests (Node ${{ matrix.node }}, ${{ matrix.os }})"
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            node: [14]
            os: [windows-latest, ubuntu-latest]
            include:
              - node: 10
                os: windows-latest
                experimental: true

        steps:
            - name: "Checking changed files"
              id: files
              uses: jitterbit/get-changed-files@v1
            - name: "Checking-out code"
              uses: actions/checkout@v2
              with:
                  submodules: false
            - name: "Defining environment variables"
              if: startsWith(matrix.os,'windows')
              run: |
                echo "CHANGED_GLOBAL_FILES=$(echo '${{ steps.files.outputs.all }}' | grep -v '^packages')" >> $GITHUB_ENV
                echo "PARTIAL_BUILD=$(If ($CHANGED_GLOBAL_FILES -eq ''){ echo 'true' } Else { echo 'false' })" >> $GITHUB_ENV
                echo "SINCE_ARG=$(If ($PARTIAL_BUILD -eq 'true' ){ echo '--since $GITHUB_SHA' } Else { echo '' })" >> $GITHUB_ENV
            - name: "Defining environment variables"
              if: startsWith(matrix.os,'ubuntu')
              run: |
                echo "CHANGED_GLOBAL_FILES=$(echo '${{ steps.files.outputs.all }}' | grep -v '^packages')" >> $GITHUB_ENV
                echo "PARTIAL_BUILD=$(if [ '$CHANGED_GLOBAL_FILES' = '' ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV
                echo "SINCE_ARG=$(if [ '$PARTIAL_BUILD' = 'true' ]; then echo '--since $GITHUB_SHA'; else echo ''; fi)" >> $GITHUB_ENV
            - name: "Defining cache"
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: "Defining node version"
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node }}
            - name: "Installing dependencies"
              run: npm install
            - name: "Running PIW-Tools commands tests"
              run: npm run test:scripts -- $SINCE_ARG
